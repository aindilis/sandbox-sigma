<project name="Sigma" default="all" basedir=".">

<target name="init">
	<property name="app.name" value="sigma"/>
	<property name="build.home" value="build"/>
	<property name="build.classes" value="${build.home}/classes"/>
	<property name="build.lib" value="${build.home}/lib"/>
    <property environment="env"/>
    <property name="tomcat.home" value="C:/Program Files/Apache Software Foundation/Tomcat 5.5" />
    <property name="dist.home" value="${tomcat.home}/webapps"/>
    <property name="deploy.home" value="${tomcat.home}/webapps/${app.name}"/>
    <property name="deploy.classes" value="${deploy.home}/WEB-INF/classes"/>
    <property name="deploy.lib" value="${deploy.home}/WEB-INF/lib"/>
    <property name="deploy.jars" value="${deploy.home}/WEB-INF/lib"/>
	<property name="dist.war" value="sigma.war"/>
	<property name="javadoc.home" value="doc/api"/>
	<property name="build.javadoc" value="${build.home}/${javadoc.home}"/>
</target>

<target name="compile" depends="init" description="Compile the project and place in ${build.classes}.">
    <mkdir dir="${build.classes}"/>
    <javac destdir="${build.classes}" debug="on" optimize="on" deprecation="off">
        <!-- classpath refid="core.classpath"/ -->
        <src refid="core.sourcepath"/>
    </javac>
</target>

<target name="web_deploy" depends="compile" description="Create the deploy structure and add the contents.">
    <!-- Make the root. -->   
	<mkdir dir="${deploy.home}"/>

    <!-- Delete the old code -->

    <delete includeemptydirs="true" failonerror="false">
        <fileset dir="${deploy.home}"/>
        <fileset dir="${tomcat.home}/work/Catalina/localhost/${app.name}"/>
    </delete>

    <!-- Copy all the *.jsp, *.xsl, *.html, pixmaps, etc. -->
    <copy todir="${deploy.home}">
        <fileset dir="web/jsp"/>
    </copy>

    <copy todir="${deploy.home}">
        <fileset file="web/simple.css"/>
    </copy>

    <copy todir="${deploy.home}/pixmaps">
        <fileset dir="web/pixmaps"/>
    </copy>

    <!-- Create WEB-INF/classes/ and copy all the loose classes to it. -->
	<mkdir dir="${deploy.classes}"/>
        <copy todir="${deploy.classes}">
                <fileset dir="${build.classes}"/>
        </copy>

    <!-- Create WEB-INF/lib/ and copy over the needed jar files. -->
	<mkdir dir="${deploy.lib}"/>
	<copy todir="${deploy.lib}">
        <fileset dir="${basedir}/lib" />
    </copy>
</target>

<target name="dist" depends="web_deploy" description="Create the *.war file and place in ${build.home}.">
    <war warfile="${dist.home}/${dist.war}" webxml="web.xml">
        <fileset dir="web/jsp"/>
        <fileset file="web/simple.css"/>
        <zipfileset dir="web/pixmaps" prefix="pixmaps"/>
        <lib dir="${deploy.lib}"/>
        <classes dir="${deploy.classes}"/>
    </war>
</target>

<target name="api_doc" depends="init" description="Build the JavaDocs and place in ${build.javadoc}.">
    <delete dir="${build.javadoc}"/>
	<mkdir dir="${build.javadoc}"/>
    <javadoc sourcepath="src/java" destdir="${build.javadoc}" author="true" version="true" use="true" windowtitle="Sigma API Specification" splitindex="true">
        <package name="com.articulate.sigma"/>
        <classpath refid="javadoc.classpath"/>
        <doctitle>Sigma API Specification</doctitle>
        <header><![CDATA[<b>Sigma API Specification</b>]]></header>
        <group title="Sigma" packages="com.articulate.sigma.*"/>
    </javadoc>
</target>

<!-- target name="all" depends="dist, api_doc" -->
<target name="all" depends="dist">
</target>

<path id="javadoc.classpath">
    <pathelement path="classes:${basedir}/lib/cos.jar:"/>
</path>

<path id="core.sourcepath">
    <pathelement path="src/java/com/articulate/sigma"/>
    <pathelement path="src/java/ClientHttpRequest"/>
</path>

</project>
